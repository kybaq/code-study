#1.문제 이해
# 괄호 문자열 s가 주어졌을 때, 올바른 괄호인지 확인하는 문제
# 올바른 괄호 조건:
# 1) ’(’로 열리면 반드시 짝지어서 ’)’로 닫혀야 함
# 2) 문자열을 왼쪽에서 오른쪽으로 순회할 때, 항상 닫는 괄호 ’)’가 여는 괄호 ’(’보다 많아지면 안 됨
# 3) 문자열 순회가 끝난 뒤, 여는 괄호와 닫는 괄호의 개수가 같아야 함

#2.예제 이해
# 예제1
# 	입력: 입력: "()()"
# 	처리 과정:
# 		1) 첫 번째 ‘(’: 여는 괄호 개수 +1
# 		2) 두 번째 ‘)’: 닫는 괄호 개수와 짝지음
# 		3) 세 번째 ‘(’: 여는 괄호 개수 +1
# 		4) 네 번째 ‘)’: 닫는 괄호 개수와 짝지음
#   출력: True (모든 괄호가 짝지어짐)

# 예제2
# 	입력: "(())()"
# 	처리 과정:
# 	    1) ’(’와 ’)’가 올바르게 짝지어짐
# 	출력: True

# 예제3
# 	입력: ")()("
# 	처리 과정:
# 	    1) 첫 번째 ‘)’: 닫는 괄호가 여는 괄호보다 많아짐
# 	출력: False

# 예제4
# 	입력: "(()("
# 	처리 과정:
# 	    1) 여는 괄호가 남음
# 	출력: False

#3.아이디어 정리
# 1. 여는 괄호와 닫는 괄호의 균형 유지:
#   1) 문자열을 왼쪽에서 오른쪽으로 순회하면서 여는 괄호의 개수를 추적
#   2) 닫는 괄호 ’)’가 여는 괄호 ’(’보다 많아지면 바로 False 반환
# 2. 최종 균형 확인:
#   1) 문자열 순회가 끝난 뒤, 여는 괄호 ’(’의 개수가 0이어야 True
# 3. 효율성 고려:
#   1) 문자열 길이가 최대 100,000이므로 O(n) 시간 복잡도로 해결해야 함

#4.아이디어를 문제에 적용
# 1) 문자열 순회하면서 여는 괄호와 닫는 괄호의 균형 추적
# 	여는 괄호 ’(’일 때:
# 	    카운터를 1 증가
# 	닫는 괄호 ’)’일 때:
# 	    카운터를 1 감소
# 	    카운터가 음수가 되면 False 반환
# 2) 순회 종료 후 균형 확인
#   카운터가 0이면 True, 그렇지 않으면 False


def solution(s):
    count = 0  # 여는 괄호의 개수의 초기화

    # 1) 문자열 순회하면서 여는 괄호와 닫는 괄호의 균형 추적
    for char in s:
        if char == '(':  # 여는 괄호일 때
            count += 1  # 카운터를 1 증가
        else:  # 닫는 괄호일 때
            count -= 1  # 카운터를 1 감소
            if count < 0:  # 카운터가 음수가 되면 False 반환
                return False

    # 2) 순회 종료 후 균형 확인
    return count == 0