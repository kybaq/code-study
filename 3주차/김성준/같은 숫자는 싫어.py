#1.문제 이해
# 배열 arr에서 연속적으로 나타나는 숫자를 하나만 남기고 모두 제거해야 함
# 제거 후에도 배열의 원소 순서는 유지되어야 함

#2.예제 이해
# 예제1
# 	입력: [1, 1, 3, 3, 0, 1, 1]
# 	처리 과정:
# 		1) 첫 번째 1 → 남김
# 		2) 두 번째 1 → 제거 (이전 숫자와 동일)
# 		3) 첫 번째 3 → 남김
# 		4) 두 번째 3 → 제거
# 		5) 첫 번째 0 → 남김
# 		6)첫 번째 1 → 남김
# 		7) 두 번째 1 → 제거
#   출력: [1, 3, 0, 1]

# 예제2
# 	입력: [4, 4, 4, 3, 3]
# 	처리 과정:
# 	    1) 첫 번째 4 → 남김
# 		2) 두 번째, 세 번째 4 → 제거
# 		3) 첫 번째 3 → 남김
# 		4) 두 번째 3 → 제거
# 	출력: [4, 3]

#3.아이디어 정리
# 1. 현재 값과 이전 값 비교:
#   1) 배열을 순회하면서 현재 숫자와 이전 숫자를 비교
#   2) 현재 숫자가 이전 숫자와 같다면 제거
# 2. 결과 저장:
#   1) 결과를 저장할 새로운 배열을 생성
#   2) 연속적이지 않은 숫자만 결과 배열에 추가
# 3. 효율성 고려:
#   1) 배열의 길이가 최대 1,000,000이므로 O(n) 시간 복잡도로 해결

#4.아이디어를 문제에 적용
# 1) 배열을 순회하며 현재 숫자와 이전 숫자를 비교
# 2) 이전 숫자와 다를 경우 결과 배열에 추가
# 3) 순회가 끝난 뒤 결과 배열을 반환

def solution(arr):
    result = [] # 결과를 저장 할 리스트
    
    # 배열을 순회하며 현재 숫자와 이전 숫자를 비교
    for i in range(len(arr)): # 배열의 길이만큼 한 번 순회 (O(n)) 
        # 첫 번째 숫자는 무조건 추가
        if i == 0 or arr[i] != arr[i -1]: # 현재 숫자와 이전 숫자를 비교 (O(1))
            result.append(arr[i]) # 이전 숫자와 다를 경우 결과 배열에 추가

    return result