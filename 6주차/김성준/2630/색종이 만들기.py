#문제 이해
# N x N 크기의 종이가 주어지고, 각 칸은 0(하얀색) 또는 1(파란색)으로 채워져 있음
# 종이가 모두 같은 색으로 이루어져 있으면 그대로 사용
# 그렇지 않다면 종이를 4등분하여 같은 과정을 반복 (재귀적으로 해결해야 함)
# 최종적으로 하얀색 색종이 개수와 파란색 색종이 개수를 출력해야 함

#예제 이해
# 예제 입력을 보면 8x8 크기의 행렬이 주어짐
# 이 행렬을 확인했을 때, 한 번의 분할로 동일한 색으로 이루어진 부분이 아니라면 4개의 작은 종이로 다시 나눔
# 최종적으로 각각의 색종이 개수를 출력해야 함

#아이디어 창출
# 1) 주어진 영역이 하나의 색으로 이루어져 있는지 확인하는 함수 필요
# 2) 같은 색이 아닐 경우, 크기를 절반으로 나누어 4개의 작은 종이로 나눔
# 3) 재귀적으로 수행하면서, 0(하얀색), 1(파란색) 색종이 개수를 카운팅
# 4) 기저 조건: 종이가 하나의 색으로만 이루어져 있다면 개수를 증가시키고 종료
# 5) 재귀 호출: 4등분하여 각각 검사**

#아이디어를 문제에 적용
# 1) 입력을 받아 행렬을 2차원 리스트로 저장
# 2) 전체 행렬을 검사하여 하나의 색으로 이루어져 있다면 해당 색의 개수를 증가
# 3) 만약 그렇지 않다면 N을 2등분하여 4개의 부분으로 나누고 재귀적으로 처리
# 4) 최종적으로 하얀색(0), 파란색(1) 각각의 개수를 출력

def divide_paper(x, y, size):
    color = paper[x][y]
    
    # 현재 영역이 하나의 색으로 이루어져 있는지 확인
    if all(paper[i][j] == color for i in range(x, x + size) for j in range(y, y + size)):
        color_count[color] += 1
        return
    
    # 종이를 4등분하여 재귀 호출
    new_size = size // 2
    for dx, dy in [(0, 0), (0, new_size), (new_size, 0), (new_size, new_size)]:
        divide_paper(x + dx, y + dy, new_size)

# 입력 받기
N = int(input())
paper = [list(map(int, input().split())) for _ in range(N)]
color_count = [0, 0]  # [하얀색 개수, 파란색 개수]

# 재귀 함수 실행
divide_paper(0, 0, N)

print(color_count[0])
print(color_count[1])