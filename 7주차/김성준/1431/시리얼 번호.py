#문제 이해
# 기타 시리얼 번호를 특정한 조건에 따라 정렬하는 문제
# 시리얼 번호는 알파벳 대문자(A-Z)와 숫자(0-9)로만 구성됨
# 정렬 조건:
# 1) 길이가 짧은 것이 먼저 옴
# 2) 길이가 같다면, 모든 숫자의 합이 작은 것이 먼저 
# 3) 위 두 조건으로도 비교할 수 없다면, 사전순으로 정렬

#예제 이해
# 입력:
# 5
# ABCD
# 145C
# A
# A910
# Z321
#   1️) 길이 기준 정렬 → "A"(1), "ABCD"(4), "Z321"(4), "145C"(4), "A910"(4)
#   2️) 길이가 같으면 숫자 합 기준 정렬 → "ABCD"(0), "Z321"(6), "145C"(10), "A910"(10)
#   3️) 위 두 조건이 동일하면 사전순 정렬 → "145C" < "A910"
# 출력:
# A
# ABCD
# Z321
# 145C
# A910

#아이디어 창출
# 입력을 리스트에 저장
# 정렬 기준을 세 가지 조건으로 설정:
#    1) 길이를 기준으로 정렬 (우선순위 1순위)
#    2) 숫자의 합을 기준으로 정렬 (우선순위 2순위)
#    3) 기본적인 사전순 정렬 (우선순위 3순위)
# Python의 `sorted()`를 사용하여 다중 정렬 수행 (key에 정렬 기준 전달)
# 정렬된 리스트를 출력

#아이디어를 문제에 적용
# 1) `N`을 입력받음
# 2) `N`개의 시리얼 번호를 리스트에 저장
# 3) 세 가지 기준을 적용하여 정렬 수행
# 4) 정렬된 리스트를 출력

import sys

# 숫자 합을 계산하는 함수
def sum_digits(serial):
    total = 0  # 숫자 합산을 저장할 변수
    for char in serial:  # 문자열을 한 글자씩 확인
        if char.isdigit():  # 숫자인지 체크
            total += int(char)  # 숫자로 변환 후 합산
    return total

# 입력 받기
N = int(sys.stdin.readline().strip())  # 첫 번째 줄: 시리얼 번호 개수
serials = [sys.stdin.readline().strip() for _ in range(N)]

# 정렬 수행 (Stable Sort 보장)
serials.sort(key=lambda x: (len(x), sum_digits(x), x))

print("\n".join(serials))


